			
						*********ARCHIVED CODE*********

		void operatorControl() {

	float v = powerLevelMain();
	float g = powerLevelBackup();
	int left = 0; // left drive train
	int right = 0; // right drive train
	int imeValue1; // current ime tick count
	int imeValue2;
	int x;
	int y;
	int z;
	int error = 0; // difference of target and imeValue
	int target = 0; // set ime tick count target

	int mode = 1; // mode 0 = IME control, mode 1 = manual control
	//imeReset(0);
	//imeReset(1);
	lcdPrint(LCD, 1, "Main: %.1f", v);
	lcdPrint(LCD, 2, "9v: %.1f", g);
	while (1) {

		/* -------------------- DRIVE CONTROL --------------------*/
		// Tank Drive
		int Drivetype = 2; // 1=tank drive mode, 2=mecanum drive

		if (Drivetype == 1) {

			left = joystickGetAnalog(1, 3); // 3 = left y-axis
			right = joystickGetAnalog(1, 2); // 2 = right y-axis
			motorSet(1, left); //motor port 1
		motorSet(10, -right); //motor port 10
		motorSet(2, left);
		motorSet(3, right);
		}


		if (Drivetype == 2) {
			x = joystickGetAnalog(1, 4);
			z = joystickGetAnalog(1, 1);
			y = joystickGetAnalog(1, 3);

			motorSet(1,  z - x + y);
			motorSet(2, - z - x + y);
			motorSet(3,  z + x + y);
			motorSet(10,  z - x - y);
			delay(20);
		}

		/*==============>Pneumatics<==============*/

		if (joystickGetDigital(1, 7, JOY_RIGHT) == true) {
			digitalWrite(7, 0); // reverse for user release

			digitalWrite(8, 0);
		}

		if ((joystickGetDigital(1, 7, JOY_LEFT) == true) // may change syntax
		) {
			digitalWrite(8, 1);
			delay(20);
			digitalWrite(7, 1);

		} /*else if ((joystickGetDigital(1, 7, JOY_RIGHT) == false) // may change syntax
		 && (digitalRead(dLIM_SW_1) == 1) && (digitalRead(dLIM_SW_2) == 1)) {
		 digitalWrite(7,0);
		 digitalWrite(8,0);
		 }*/

		/* -------------------- LIFT CONTROL --------------------*/

		/*Linear Lift (input to right triggers Manual Control:
		 * on right d-pad for three preset
		 * pole heights one for skyrise holder
		 * one home position on left d-pad labled D)*/

		/*printf("mode %d: ", mode); // displays current mode
		printf("target %d: ", target); // displays target ime tick count
		printf("error %d: ", error); // displays error
		printf("imeValue %d: ", imeValue1); // displays current ime tick count
		printf("imeValue2 %d: ", imeValue2);
		printf("PL %d: ", pl);
		if (mode == 1) {
			error = 0;
			target = 0;
		}
		if (joystickGetDigital(1, 8, JOY_UP)) { // high post tick count(target)
			target = 2100;
			mode = 0; // mode 0 = IME
		} else if (joystickGetDigital(1, 8, JOY_DOWN)) { // medium post tick count(target)
			target = 0;
			mode = 0; // mode 0 = IME

		} else if (joystickGetDigital(1, 8, JOY_LEFT)) {
			target = 800;
			mode = 0;
		} else if (joystickGetDigital(1, 8, JOY_RIGHT)) { // skyrise section tick count(target)
			target = 1300;
			mode = 0; // mode 0 = IME
		}

		if (mode == 0) { //if mode target
			imeGet(0, &imeValue1); //get ime count
			imeGet(1, &imeValue2);
			error = (target + imeValue1) / 2; //calculate error

			if (error > 127) { //if over max
				motorSet(L_LIFT_TOP, 127); //set to speed motor can understand
				motorSet(L_LIFT_BTM, 127);
				motorSet(R_LIFT_TOP, 127);
				motorSet(R_LIFT_BTM, 127);

			} else if (error < -127) {
				motorSet(L_LIFT_TOP, -127); //set to speed motor can understand
				motorSet(L_LIFT_BTM, -127);
				motorSet(R_LIFT_TOP, -127);
				motorSet(R_LIFT_BTM, -127);

			} else
				motorSet(L_LIFT_TOP, error); //set to speed motor can understand
			motorSet(L_LIFT_BTM, error);
			motorSet(R_LIFT_TOP, error);
			motorSet(R_LIFT_BTM, error);

		}*/

		if (joystickGetDigital(2, 6, JOY_UP) == true) { //go up mode manual
			mode = 1; // mode 1 = manual control
			//motorSet(L_LIFT_TOP, 127); //set to speed motor can understand
			motorSet(L_LIFT_BTM, 127);
			motorSet(R_LIFT_TOP, 127);
			motorSet(R_LIFT_BTM, 127);

			if ((digitalRead(dLIM_SW_5) == 0) && (digitalRead(dLIM_SW_6) == 0)
					&& (joystickGetDigital(1, 6, JOY_UP) == true)) { // vertical height limit switch

				//motorSet(L_LIFT_TOP, 0);
				motorSet(L_LIFT_BTM, 0);
				motorSet(R_LIFT_TOP, 0);
				motorSet(R_LIFT_BTM, 0);

			}
		} else if (joystickGetDigital(2, 6, JOY_DOWN) == true) { //go down mode manual
			mode = 1; // mode 1 = manual control
			//motorSet(L_LIFT_TOP, -90); //set to speed motor can understand
			motorSet(L_LIFT_BTM, -90);
			motorSet(R_LIFT_TOP, -90);
			motorSet(R_LIFT_BTM, -90);

			if ((digitalRead(dLIM_SW_3) == 0) && (digitalRead(dLIM_SW_4) == 0)
					&& (joystickGetDigital(1, 6, JOY_DOWN) == true)) {

				//motorSet(L_LIFT_TOP, 0);
				motorSet(L_LIFT_BTM, 0);
				motorSet(R_LIFT_TOP, 0);
				motorSet(R_LIFT_BTM, 0);

			}
		} else if (mode == 1) { //if mode manual but no button stop motor
			//motorSet(L_LIFT_TOP, 0); //set to speed motor can understand
			motorSet(L_LIFT_BTM, 0);
			motorSet(R_LIFT_TOP, 0);
			motorSet(R_LIFT_BTM, 0);

		}
		if (joystickGetDigital(2, 5, JOY_UP) == true) {
			motorSet(7, 100);
			motorSet(8, 100);

		} else if (joystickGetDigital(2, 5, JOY_DOWN) == true) {
			motorSet(7, -100);
			motorSet(8, -100);
		} else{
			motorSet(7, 0);
			motorSet(8, 0);

		}
		if (joystickGetDigital(2, 7, JOY_UP) == true) {
			motorSet(9, 127);
		} else if (joystickGetDigital(2, 7, JOY_DOWN) == true) {
			motorSet(9, -90);
		} else {
			motorSet(9, 0);
		}

		delay(20);
	}
}		